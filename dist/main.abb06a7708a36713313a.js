(()=>{"use strict";var e,t={288:(e,t,i)=>{var n=i(748),s=i(437);class a{group;keys=new Map;originalKeyColors=new Map;constructor(){this.group=new s.YJl,this.createKeys()}getKey(e){return this.keys.get(e)}isBlackKey(e){return[1,3,6,8,10].includes(e%12)}pressKey(e,t){const i=this.getKey(e);i&&i.material instanceof s._4j&&(this.originalKeyColors.has(e)||this.originalKeyColors.set(e,i.material.color.clone()),i.material.color.set(t))}releaseKey(e){const t=this.getKey(e),i=this.originalKeyColors.get(e);t&&t.material instanceof s._4j&&i&&t.material.color.set(i)}releaseAllKeys(){this.originalKeyColors.forEach((e,t)=>{const i=this.getKey(t);i&&i.material instanceof s._4j&&i.material.color.set(e)}),this.originalKeyColors.clear()}createKeys(){const e=new s._4j({color:16777215,roughness:.5,metalness:.1}),t=new s._4j({color:2236962,roughness:.5,metalness:.1}),i=new s.iNn(1,.4,5),n=new s.iNn(.6,.6,3);let a=0,o=[];for(let e=0;e<88;e++)if(![1,3,6,8,10].includes((e+21)%12)){const e=1.05*a;o.push(e),a++}const r=-(1.05*a-.05)/2;a=0;for(let l=0;l<88;l++){const h=l+21;let c;if([1,3,6,8,10].includes(h%12)){c=new s.eaF(n,t.clone());const e=o[a-1];c.position.set(e+.5+r,(.6-.4)/2+.1,-1)}else{c=new s.eaF(i,e.clone());const t=o[a];c.position.set(t+r,0,0),a++}c.name=`key_${h}`,this.group.add(c),this.keys.set(h,c)}}}const o=.5,r=[16711680,65280,255,16776960,16711935,65535,16777215,16746496,65416,8913151,8978176,35071,16711816,8947848,13369344,52224];class l{scene;piano;noteObjects;noteMap=new Map;instancedMesh=null;material;lastActiveNotes=new Set;tempColor=new s.Q1f;constructor(e,t){this.scene=e,this.piano=t,this.noteObjects=new s.YJl,this.material=new s.BKk({vertexShader:'// Attributes for the base geometry\nattribute vec3 position;\nattribute vec2 uv;\n\n// Attributes for each instance\nattribute mat4 instanceMatrix;\nattribute vec3 instanceColor;\nattribute float instanceNoteTime;\nattribute float instanceNoteDuration;\nattribute float instanceChannel;\n\n// Uniforms passed from the CPU\nuniform float elapsedTime;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 modelMatrix;\n\n// Varyings passed to the fragment shader\nvarying vec3 vColor;\nvarying float vState; // 0.0: normal, 1.0: active, 2.0: finished\nvarying float vChannel;\n\nvoid main() {\n    // Determine the state of the note\n    float noteStartTime = instanceNoteTime;\n    float noteEndTime = instanceNoteTime + instanceNoteDuration;\n\n    if (elapsedTime > noteStartTime && elapsedTime <= noteEndTime) {\n        // This is a rough check for "active". The more accurate "active"\n        // state will be managed by the CPU by overwriting the color.\n        // We use vColor to pass the final color to the fragment shader.\n        vState = 1.0;\n    } else if (elapsedTime > noteEndTime) {\n        vState = 2.0; // Finished\n    } else {\n        vState = 0.0; // Normal\n    }\n    \n    vColor = instanceColor;\n    vChannel = instanceChannel;\n\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * instanceMatrix * vec4(position, 1.0);\n}\n',fragmentShader:'precision highp float;\n\n// Varyings from the vertex shader\nvarying vec3 vColor;\nvarying float vState; // 0.0: normal, 1.0: active, 2.0: finished\nvarying float vChannel;\n\n// Uniforms\nuniform float channelOpacities[16];\n\nvoid main() {\n    int channelIndex = int(vChannel);\n    float opacity = channelOpacities[channelIndex];\n\n    vec3 finalColor = vColor;\n    if (vState == 2.0) { // Finished\n        finalColor *= 0.4; // Darken the color\n    }\n    \n    // The "active" state is handled by the CPU sending a brighter vColor.\n\n    gl_FragColor = vec4(finalColor, opacity);\n}\n',uniforms:{elapsedTime:new s.nc$(0),channelOpacities:new s.nc$(new Array(16).fill(.9))},transparent:!0}),this.scene.add(this.noteObjects)}visualize(e){this.clear();const t=[];if(e.tracks.forEach(e=>{9!==e.channel&&e.notes.forEach(i=>{const n=`${i.midi}-${i.time}-${e.channel}`,a=new s.Q1f(r[e.channel%r.length]),o={note:i,channel:e.channel,instanceId:0,originalColor:a};t.push(o),this.noteMap.set(n,o)})}),0===t.length)return;t.sort((e,t)=>e.note.time-t.note.time),t.forEach((e,t)=>e.instanceId=t),this.material.uniforms.elapsedTime.value=0,this.material.uniforms.channelOpacities.value.fill(.9);const i=new s.iNn(1,.2,1);this.instancedMesh=new s.ZLX(i,this.material,t.length);const n=new s.uWO(new Float32Array(3*t.length),3),a=new s.uWO(new Float32Array(t.length),1),o=new s.uWO(new Float32Array(t.length),1),l=new s.uWO(new Float32Array(t.length),1),h=new s.kn4,c=new s.Pq0,d=new s.PTz,u=new s.Pq0;t.forEach((e,t)=>{const{note:i,channel:s,originalColor:r}=e,{midi:m,time:p,duration:g}=i,y=this.piano.getKey(m);if(!y)return;const f=y.position,v=this.piano.isBlackKey(m)?.6:1,x=.001*s;c.set(f.x,.1-.01+x,5*-p-5*g/2),u.set(.9*v,1,5*g),d.identity(),h.compose(c,d,u),this.instancedMesh.setMatrixAt(t,h),r.toArray(n.array,3*t),a.setX(t,p),o.setX(t,g),l.setX(t,s)}),this.instancedMesh.geometry.setAttribute("instanceColor",n),this.instancedMesh.geometry.setAttribute("instanceNoteTime",a),this.instancedMesh.geometry.setAttribute("instanceNoteDuration",o),this.instancedMesh.geometry.setAttribute("instanceChannel",l),this.instancedMesh.instanceMatrix.needsUpdate=!0,this.noteObjects.add(this.instancedMesh)}update(e,t){if(!this.instancedMesh||!this.material)return;this.material.uniforms.elapsedTime.value=e;const i=this.instancedMesh.geometry.getAttribute("instanceColor");let n=!1;const s=new Set(t.keys());this.lastActiveNotes.forEach(e=>{if(!s.has(e)){const t=this.noteMap.get(e);t&&(t.originalColor.toArray(i.array,3*t.instanceId),n=!0)}}),s.forEach(e=>{if(!this.lastActiveNotes.has(e)){const t=this.noteMap.get(e);t&&(this.tempColor.copy(t.originalColor).addScalar(o),this.tempColor.toArray(i.array,3*t.instanceId),n=!0)}}),n&&(i.needsUpdate=!0),this.lastActiveNotes=s}resetVisuals(){if(!this.instancedMesh)return;const e=this.instancedMesh.geometry.getAttribute("instanceColor");this.noteMap.forEach(t=>{t.originalColor.toArray(e.array,3*t.instanceId)}),e.needsUpdate=!0,this.lastActiveNotes.clear()}clear(){this.instancedMesh&&(this.instancedMesh.geometry.dispose(),this.noteObjects.remove(this.instancedMesh)),this.noteMap.clear(),this.instancedMesh=null}setChannelOpacity(e,t){this.material&&(this.material.uniforms.channelOpacities.value[e]=t)}setAllChannelOpacities(e){this.material&&(this.material.uniforms.channelOpacities.value=e)}}class h{audioContext;samples=new Map;instrument;activeSources=new Map;baseUrl="https://raw.githubusercontent.com/nbrosowsky/tonejs-instruments/master/samples/";noteNames=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];noteIndex=new Map(this.noteNames.map((e,t)=>[e,t]));sampleNames=["C1","F1","G1","C2","F2","G2","C3","F3","G3","C4","F4","G4","C5","F5","G5","C6","F6","G6","C7","F7","G7"];constructor(e,t){this.audioContext=e,this.instrument=t}async load(){const e=[],t=this.sampleNames.map(async t=>{const i=`${this.baseUrl}${this.instrument}/${t}.mp3`;try{const e=await fetch(i);if(!e.ok)throw new Error(`Failed to fetch sample: ${i}`);const n=await e.arrayBuffer(),s=await this.audioContext.decodeAudioData(n),{peak:a,normalizationGain:o}=this._calculatePeakAndGain(s),r=this._findAudioStart(s,a);this.samples.set(t,{buffer:s,startOffset:r,normalizationGain:o})}catch(i){e.push(t)}});await Promise.all(t),e.length>0&&console.error(`Could not load sample [${e.join(",")}] for ${this.instrument}`)}_findAudioStart(e,t){const i=.05*t;if(i<=0)return 0;const n=e.getChannelData(0);for(let t=0;t<n.length;t++)if(Math.abs(n[t])>i){const i=Math.floor(.005*e.sampleRate);return Math.max(0,t-i)/e.sampleRate}return 0}_calculatePeakAndGain(e){let t=0;for(let i=0;i<e.numberOfChannels;i++){const n=e.getChannelData(i);for(let e=0;e<n.length;e++){const i=Math.abs(n[e]);i>t&&(t=i)}}return{peak:t,normalizationGain:t>0?1/t:1}}playNote(e,t,i,n,s){if(0===this.samples.size)return void console.warn(`No samples loaded for ${this.instrument}, cannot play note.`);this.activeSources.has(e)&&this.stopNote(e),this.midiToNoteName(e);let a="",o=1/0;Array.from(this.samples.keys()).forEach(t=>{const i=this.noteNameToMidi(t),n=Math.abs(e-i);n<o&&(o=n,a=t)});const r=this.samples.get(a);if(!r)return;const l=this.audioContext.createBufferSource();l.buffer=r.buffer;const h=this.noteNameToMidi(a);l.detune.value=100*(e-h);const c=this.audioContext.createGain(),d=t*r.normalizationGain;if(c.gain.setValueAtTime(d,this.audioContext.currentTime),c.connect(s),l.connect(c),l.start(this.audioContext.currentTime,r.startOffset),this.activeSources.set(e,{source:l,gainNode:c}),n){const e=this.audioContext.currentTime+i;if(i>.1){const t=e-.1;c.gain.setValueAtTime(d,t)}c.gain.linearRampToValueAtTime(0,e),l.stop(e)}else{const e=this.audioContext.currentTime+i+.1;c.gain.setValueAtTime(d,e),c.gain.linearRampToValueAtTime(0,e),l.stop(e)}l.onended=()=>{this.activeSources.delete(e)}}stopNote(e){const t=this.activeSources.get(e);if(t){const{source:i,gainNode:n}=t,s=1.5;n.gain.cancelScheduledValues(this.audioContext.currentTime),n.gain.setTargetAtTime(0,this.audioContext.currentTime,s/4),i.stop(this.audioContext.currentTime+s),this.activeSources.delete(e)}}stopAllNotes(){this.activeSources.forEach((e,t)=>{this.stopNote(t)})}midiToNoteName(e){const t=Math.floor(e/12)-1,i=e%12;return`${this.noteNames[i]}${t}`}noteNameToMidi(e){const t=parseInt(e.slice(-1)),i=e.slice(0,-1);return this.noteIndex.get(i)+12*(t+1)}}const c=["sine","square","sawtooth","triangle"];class d{audioContext;activeOscillators=new Map;mainGain;channelGains=new Map;samplers=new Map;channelInstruments=new Map;constructor(){this.audioContext=new window.AudioContext,this.mainGain=this.audioContext.createGain(),this.mainGain.gain.value=.5,this.mainGain.connect(this.audioContext.destination),this.loadSampler("piano")}get currentTime(){return this.audioContext.currentTime}async loadSampler(e){if(this.samplers.has(e))return;console.log(`Loading ${e}...`);const t=new h(this.audioContext,e);this.samplers.set(e,t),await t.load(),console.log(`${e} loaded.`)}getChannelGain(e,t=.7){if(!this.channelGains.has(e)){const i=this.audioContext.createGain();i.gain.value=t,i.connect(this.mainGain),this.channelGains.set(e,i)}return this.channelGains.get(e)}setChannelVolume(e,t){this.getChannelGain(e,t).gain.value=t}setInstrument(e,t){this.channelInstruments.set(e,t),c.includes(t)||this.loadSampler(t)}playNote(e,t,i=!0){"suspended"===this.audioContext.state&&this.audioContext.resume();const n=this.getChannelGain(t);if(0===n.gain.value)return;const s=this.channelInstruments.get(t)||"triangle";if(c.includes(s))this.playOscillatorNote(e,s,i,n);else{const t=this.samplers.get(s);t?t.playNote(e.midi,e.velocity,e.duration,i,n):(console.warn(`Sampler for ${s} not found. Playing fallback sound.`),this.playOscillatorNote(e,s,i,n))}}playOscillatorNote(e,t,i,n){if(this.activeOscillators.has(e.midi))return;const s=this.audioContext.createOscillator(),a=this.audioContext.createGain(),o=440*Math.pow(2,(e.midi-69)/12);if(s.frequency.setValueAtTime(o,this.audioContext.currentTime),s.type=t,a.gain.setValueAtTime(0,this.audioContext.currentTime),a.gain.linearRampToValueAtTime(e.velocity,this.audioContext.currentTime+.05),s.connect(a),a.connect(n),s.start(),this.activeOscillators.set(e.midi,{oscillator:s,gainNode:a}),i){const t=this.audioContext.currentTime+e.duration;a.gain.setValueAtTime(a.gain.value,t-.1),a.gain.linearRampToValueAtTime(0,t),s.stop(t)}}stopNote(e){const t=this.activeOscillators.get(e);if(t){const i=.3;t.gainNode.gain.cancelScheduledValues(this.audioContext.currentTime),t.gainNode.gain.setValueAtTime(t.gainNode.gain.value,this.audioContext.currentTime),t.gainNode.gain.linearRampToValueAtTime(0,this.audioContext.currentTime+i),t.oscillator.stop(this.audioContext.currentTime+i),this.activeOscillators.delete(e)}}stopAllNotes(){this.activeOscillators.forEach((e,t)=>{this.stopNote(t)}),this.samplers.forEach(e=>{e.stopAllNotes()})}resumeContext(){"suspended"===this.audioContext.state&&this.audioContext.resume()}}const u=[{value:"triangle",text:"Synth (Triangle)"},{value:"sine",text:"Synth (Sine)"},{value:"square",text:"Synth (Square)"},{value:"sawtooth",text:"Synth (Sawtooth)"},{value:"piano",text:"Piano"},{value:"bass-electric",text:"Bass Electric"},{value:"bassoon",text:"Bassoon"},{value:"cello",text:"Cello"},{value:"clarinet",text:"Clarinet"},{value:"contrabass",text:"Contrabass"},{value:"flute",text:"Flute"},{value:"french-horn",text:"French Horn"},{value:"guitar-acoustic",text:"Guitar Acoustic"},{value:"guitar-electric",text:"Guitar Electric"},{value:"guitar-nylon",text:"Guitar Nylon"},{value:"harmonium",text:"Harmonium"},{value:"harp",text:"Harp"},{value:"organ",text:"Organ"},{value:"saxophone",text:"Saxophone"},{value:"trombone",text:"Trombone"},{value:"trumpet",text:"Trumpet"},{value:"tuba",text:"Tuba"},{value:"violin",text:"Violin"},{value:"xylophone",text:"Xylophone"}],m={"acoustic grand piano":"piano","bright acoustic piano":"piano","electric grand piano":"piano","honky-tonk piano":"piano","electric piano 1":"piano","electric piano 2":"piano",harpsichord:"harmonium",clavinet:"piano",celesta:"xylophone",glockenspiel:"xylophone","music box":"xylophone",vibraphone:"xylophone",marimba:"xylophone",xylophone:"xylophone","tubular bells":"xylophone",dulcimer:"guitar-acoustic","drawbar organ":"organ","percussive organ":"organ","rock organ":"organ","church organ":"organ","reed organ":"harmonium",accordion:"harmonium",harmonica:"harmonium","tango accordion":"harmonium","acoustic guitar (nylon)":"guitar-nylon","acoustic guitar (steel)":"guitar-acoustic","electric guitar (jazz)":"guitar-electric","electric guitar (clean)":"guitar-electric","electric guitar (muted)":"guitar-electric","overdriven guitar":"guitar-electric","distortion guitar":"guitar-electric","guitar harmonics":"guitar-electric","acoustic bass":"bass-electric","electric bass (finger)":"bass-electric","electric bass (pick)":"bass-electric","fretless bass":"bass-electric","slap bass 1":"bass-electric","slap bass 2":"bass-electric","synth bass 1":"bass-electric","synth bass 2":"bass-electric",violin:"violin",viola:"violin",cello:"cello",contrabass:"contrabass","tremolo strings":"violin","pizzicato strings":"violin","orchestral harp":"harp",timpani:"bassoon","string ensemble 1":"violin","string ensemble 2":"violin","synthstrings 1":"violin","synthstrings 2":"violin","choir aahs":"sawtooth","voice oohs":"sine","synth voice":"sawtooth","orchestra hit":"trumpet",trumpet:"trumpet",trombone:"trombone",tuba:"tuba","muted trumpet":"trumpet","french horn":"french-horn","brass section":"trumpet","synthbrass 1":"trumpet","synthbrass 2":"trumpet","soprano sax":"saxophone","alto sax":"saxophone","tenor sax":"saxophone","baritone sax":"saxophone",oboe:"clarinet","english horn":"french-horn",bassoon:"bassoon",clarinet:"clarinet",piccolo:"flute",flute:"flute",recorder:"flute","pan flute":"flute","blown bottle":"flute",shakuhachi:"flute",whistle:"flute",ocarina:"flute","lead 1 (square)":"square","lead 2 (sawtooth)":"sawtooth","lead 3 (calliope)":"triangle","lead 4 (chiff)":"triangle","lead 5 (charang)":"triangle","lead 6 (voice)":"sine","lead 7 (fifths)":"sawtooth","lead 8 (bass + lead)":"sawtooth","pad 1 (new age)":"sawtooth","pad 2 (warm)":"sawtooth","pad 3 (polysynth)":"sawtooth","pad 4 (choir)":"sawtooth","pad 5 (bowed)":"sawtooth","pad 6 (metallic)":"sawtooth","pad 7 (halo)":"sawtooth","pad 8 (sweep)":"sawtooth","fx 1 (rain)":"sine","fx 2 (soundtrack)":"sine","fx 3 (crystal)":"sine","fx 4 (atmosphere)":"sine","fx 5 (brightness)":"sine","fx 6 (goblins)":"sine","fx 7 (echoes)":"sine","fx 8 (sci-fi)":"sine",sitar:"guitar-nylon",banjo:"guitar-acoustic",shamisen:"guitar-nylon",koto:"harp",kalimba:"xylophone","bag pipe":"french-horn",fiddle:"violin",shanai:"clarinet","tinkle bell":"xylophone",agogo:"xylophone","steel drums":"xylophone",woodblock:"xylophone","taiko drum":"bassoon","melodic tom":"bassoon","synth drum":"square","guitar fret noise":"guitar-acoustic","breath noise":"flute",seashore:"sine","bird tweet":"flute","telephone ring":"square",helicopter:"sawtooth",applause:"sine",gunshot:"bassoon"};new class{scene;camera;renderer;piano;noteVisualizer;synth;isPlaying=!1;midiData=null;audioContextStartTime=0;elapsedTime=0;notesToPlay=[];nextNoteIndex=0;activeNotes=new Map;playPauseBtn;progressBar;progressElement;timeDisplay;lastFormattedTime="";uiContainer;statsDisplay;fpsDisplay;instrumentSelectorsContainer;instrumentSettingsToggle;topDownViewToggle;matchNoteDurationToggle;performanceModeSelect;pipBtn;channelInstruments=new Map;channelInitialVolumes=new Map;pipVideo;initialPinchDistance=0;frameCount=0;lastFPSTime=0;getInitialPerformanceMode(){try{const e=document.createElement("canvas"),t=e.getContext("experimental-webgl")||e.getContext("webgl");if(t){const e=t.getExtension("WEBGL_debug_renderer_info");if(e&&t.getParameter(e.UNMASKED_RENDERER_WEBGL).toLowerCase().includes("intel"))return console.log("Intel GPU detected, enabling lightweight mode by default."),"lightweight"}}catch(e){console.error("Could not detect GPU info, defaulting to non-lightweight mode.",e)}return"normal"}constructor(){this.scene=new s.Z58,this.camera=new s.ubm(60,window.innerWidth/window.innerHeight,.1,2e3),this.piano=new a,this.noteVisualizer=new l(this.scene,this.piano),this.synth=new d,this.init(),this.lastFPSTime=performance.now(),this.animate(this.lastFPSTime)}init(){this.scene.background=new s.Q1f(2899536),this.performanceModeSelect=document.getElementById("performance-mode-select"),this.performanceModeSelect.value=this.getInitialPerformanceMode(),this.recreateRenderer(),this.camera.position.set(0,8,12),this.camera.lookAt(0,0,0);const e=new s.$p8(16777215,.7);this.scene.add(e);const t=new s.ZyN(16777215,.9);t.position.set(0,15,10),this.scene.add(t),this.piano.group.position.z=2.5,this.scene.add(this.piano.group),this.uiContainer=document.getElementById("ui-container"),this.playPauseBtn=document.getElementById("play-pause-btn"),this.progressBar=document.getElementById("progress-bar"),this.progressElement=document.getElementById("progress"),this.timeDisplay=document.getElementById("time-display"),this.statsDisplay=document.getElementById("stats-display"),this.fpsDisplay=document.getElementById("fps-display"),this.instrumentSelectorsContainer=document.getElementById("instrument-selectors-container"),this.instrumentSettingsToggle=document.getElementById("instrument-settings-toggle"),this.matchNoteDurationToggle=document.getElementById("match-note-duration-toggle"),this.pipBtn=document.getElementById("pip-btn"),this.playPauseBtn.addEventListener("click",()=>this.togglePlayback()),this.pipBtn.addEventListener("click",()=>this.togglePiP()),this.performanceModeSelect.addEventListener("change",()=>this.recreateRenderer()),this.instrumentSettingsToggle.addEventListener("click",()=>{this.instrumentSelectorsContainer.classList.toggle("collapsed");const e=this.instrumentSettingsToggle.querySelector("span");e&&(e.innerHTML=this.instrumentSelectorsContainer.classList.contains("collapsed")?"&#x25BC;":"&#x25B2;")}),this.progressBar.addEventListener("click",e=>this.handleSeek(e)),this.topDownViewToggle=document.getElementById("top-down-view-toggle"),this.topDownViewToggle.addEventListener("change",e=>{e.target.checked?this.camera.position.set(0,24,0):this.camera.position.set(0,8,12),this.camera.lookAt(0,0,0)}),window.addEventListener("resize",this.onWindowResize.bind(this),!1),document.getElementById("midi-file").addEventListener("change",e=>this.handleMidiFile(e)),document.addEventListener("visibilitychange",()=>this.handleVisibilityChange()),this.initPiP(),this.initDragAndDrop(),this.initControls()}populateChannelInstrumentSelectors(e){this.instrumentSelectorsContainer.innerHTML="",e.forEach(e=>{const t=document.createElement("div");t.className="channel-instrument-selector";const i=document.createElement("label");i.textContent=`Ch ${e+1}:`,i.htmlFor=`instrument-select-ch-${e}`;const n=new s.Q1f(r[e%r.length]);i.style.color=n.getStyle();const a=document.createElement("select");a.id=`instrument-select-ch-${e}`,a.dataset.channel=e.toString(),u.forEach((e,t)=>{const i=document.createElement("option");i.value=e.value,i.textContent=e.text,a.appendChild(i)});const o=this.channelInstruments.get(e)||"piano";a.value=o,this.synth.setInstrument(e,o),this.channelInstruments.set(e,o),a.addEventListener("change",t=>{const i=t.target.value;this.channelInstruments.set(e,i),this.synth.setInstrument(e,i)});const l=document.createElement("input");l.type="range",l.id=`volume-ch-${e}`,l.min="0",l.max="1",l.step="0.01";const h=this.channelInitialVolumes.get(e)??.7;l.value=h.toString(),this.synth.setChannelVolume(e,h),l.addEventListener("input",t=>{const i=t.target,n=parseFloat(i.value);this.synth.setChannelVolume(e,n);const s=.1+.8*n;this.noteVisualizer.setChannelOpacity(e,s)}),t.appendChild(i),t.appendChild(a),t.appendChild(l),this.instrumentSelectorsContainer.appendChild(t)}),this.instrumentSelectorsContainer.classList.add("collapsed");const t=this.instrumentSettingsToggle.querySelector("span");t&&(t.innerHTML="&#x25BC;")}initControls(){const e=document.getElementById("webgl-container"),t=e=>Math.max(5,Math.min(e,50));e.addEventListener("wheel",e=>{e.preventDefault(),this.camera.position.z=t(this.camera.position.z+.01*e.deltaY)},{passive:!1}),window.addEventListener("keydown",e=>{if("ArrowRight"===e.key)return void this.skipTime(10);if("ArrowLeft"===e.key)return void this.skipTime(-10);let i=0;"-"===e.key||"_"===e.key?i=.5:"^"!==e.key&&"+"!==e.key&&"="!==e.key||(i=-.5),0!==i&&(this.camera.position.z=t(this.camera.position.z+i))}),e.addEventListener("touchstart",e=>{2===e.touches.length&&(e.preventDefault(),this.initialPinchDistance=Math.hypot(e.touches[0].pageX-e.touches[1].pageX,e.touches[0].pageY-e.touches[1].pageY))},{passive:!1}),e.addEventListener("touchmove",e=>{if(2===e.touches.length){e.preventDefault();const i=Math.hypot(e.touches[0].pageX-e.touches[1].pageX,e.touches[0].pageY-e.touches[1].pageY),n=i-this.initialPinchDistance,s=.05;this.camera.position.z=t(this.camera.position.z-n*s),this.initialPinchDistance=i}},{passive:!1}),e.addEventListener("touchend",e=>{e.touches.length<2&&(this.initialPinchDistance=0)})}initDragAndDrop(){const e=document.body;e.addEventListener("dragover",t=>{t.preventDefault(),e.classList.add("drag-over")}),e.addEventListener("dragleave",()=>{e.classList.remove("drag-over")}),e.addEventListener("drop",t=>{if(t.preventDefault(),e.classList.remove("drag-over"),t.dataTransfer?.files){const e=t.dataTransfer.files[0];if(e){this.synth.resumeContext();const t=new FileReader;t.onload=e=>{const t=e.target?.result;t&&this.loadMidi(t)},t.readAsArrayBuffer(e)}}})}handleMidiFile(e){this.synth.resumeContext();const t=e.target;if(!t.files||0===t.files.length)return;const i=t.files[0],n=new FileReader;n.onload=e=>{const t=e.target?.result;t&&this.loadMidi(t)},n.readAsArrayBuffer(i)}getInstrumentForTrack(e){const t=e.instrument.name.toLowerCase(),i=m[t];return i&&u.some(e=>e.value===i)?i:t.includes("piano")?"piano":t.includes("guitar")?"guitar-acoustic":t.includes("bass")?"bass-electric":t.includes("synth")?"sawtooth":"piano"}async loadMidi(e){try{this.midiData=new n.Midi(e),this.noteVisualizer.visualize(this.midiData),this.channelInstruments.clear(),this.channelInitialVolumes.clear();const t=new Set;this.midiData.tracks.forEach(e=>{if(9!==e.channel){t.add(e.channel);const i=this.getInstrumentForTrack(e);this.channelInstruments.set(e.channel,i);const n=e.controlChanges[7];if(n&&n.length>0){const t=n[n.length-1];this.channelInitialVolumes.set(e.channel,t.value)}}}),this.notesToPlay=this.midiData.tracks.flatMap(e=>9===e.channel?[]:e.notes.map(t=>({note:t,channel:e.channel}))).sort((e,t)=>e.note.time-t.note.time),this.populateChannelInstrumentSelectors(Array.from(t).sort((e,t)=>e-t)),this.resetPlayback(),this.uiContainer.style.display="flex",this.statsDisplay.style.display="block",this.updateUI()}catch(e){console.error("Error parsing MIDI file:",e),alert("Could not parse the MIDI file. Please try another one.")}}resetPlayback(){this.isPlaying=!1,this.elapsedTime=0,this.audioContextStartTime=0,this.nextNoteIndex=0,this.noteVisualizer.noteObjects.position.z=0,this.playPauseBtn.textContent="Play",this.statsDisplay&&(this.statsDisplay.style.display="none"),this.synth.stopAllNotes(),this.piano.releaseAllKeys(),this.activeNotes.clear(),this.noteVisualizer.resetVisuals()}togglePlayback(){this.midiData&&(this.synth.resumeContext(),this.isPlaying=!this.isPlaying,this.isPlaying?(this.audioContextStartTime=this.synth.currentTime-this.elapsedTime,this.playPauseBtn.textContent="Pause",this.statsDisplay.style.display="block"):(this.synth.stopAllNotes(),this.playPauseBtn.textContent="Play"))}handleSeek(e){if(!this.midiData)return;const t=this.progressBar.getBoundingClientRect(),i=(e.clientX-t.left)/t.width;this.elapsedTime=this.midiData.duration*i,this.isPlaying&&(this.audioContextStartTime=this.synth.currentTime-this.elapsedTime),this.synth.stopAllNotes(),this.piano.releaseAllKeys(),this.activeNotes.clear(),this.noteVisualizer.resetVisuals(),this.nextNoteIndex=this.notesToPlay.findIndex(e=>e.note.time>=this.elapsedTime),-1===this.nextNoteIndex&&(this.nextNoteIndex=this.notesToPlay.length);for(let e=0;e<this.notesToPlay.length;e++){const t=this.notesToPlay[e],{note:i,channel:n}=t;if(i.time<=this.elapsedTime&&i.time+i.duration>this.elapsedTime){const e=new s.Q1f(r[n%r.length]);e.addScalar(o),this.piano.pressKey(i.midi,e),this.activeNotes.set(`${i.midi}-${i.time}-${n}`,t)}}this.noteVisualizer.update(this.elapsedTime,this.activeNotes)}skipTime(e){if(!this.midiData)return;const t=this.elapsedTime+e;this.elapsedTime=Math.max(0,Math.min(this.midiData.duration,t)),this.isPlaying&&(this.audioContextStartTime=this.synth.currentTime-this.elapsedTime),this.synth.stopAllNotes(),this.piano.releaseAllKeys(),this.activeNotes.clear(),this.noteVisualizer.resetVisuals(),this.nextNoteIndex=this.notesToPlay.findIndex(e=>e.note.time>=this.elapsedTime),-1===this.nextNoteIndex&&(this.nextNoteIndex=this.notesToPlay.length);for(let e=0;e<this.notesToPlay.length;e++){const t=this.notesToPlay[e],{note:i,channel:n}=t;if(i.time<=this.elapsedTime&&i.time+i.duration>this.elapsedTime){const e=new s.Q1f(r[n%r.length]);e.addScalar(o),this.piano.pressKey(i.midi,e),this.activeNotes.set(`${i.midi}-${i.time}-${n}`,t)}}this.noteVisualizer.update(this.elapsedTime,this.activeNotes)}initPiP(){let e=60;"super-lightweight"===this.performanceModeSelect.value&&(e=30);const t=this.renderer.domElement.captureStream(e);this.pipVideo=document.createElement("video"),this.pipVideo.srcObject=t,this.pipVideo.muted=!0,this.pipVideo.play()}async togglePiP(){if(document.pictureInPictureEnabled)try{document.pictureInPictureElement?await document.exitPictureInPicture():(0===this.pipVideo.readyState&&await this.pipVideo.play(),await this.pipVideo.requestPictureInPicture())}catch(e){console.error("Error toggling Picture-in-Picture:",e),e instanceof Error?alert(`Error entering Picture-in-Picture mode: ${e.message}`):alert("An unknown error occurred while entering Picture-in-Picture mode.")}else alert("Picture-in-Picture is not supported in this browser, or is disabled.")}recreateRenderer(){this.renderer&&(this.renderer.dispose(),this.renderer.domElement.parentElement?.removeChild(this.renderer.domElement));const e=this.performanceModeSelect.value,t="lightweight"===e||"super-lightweight"===e;this.renderer=new s.JeP({antialias:!t}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(t?1:window.devicePixelRatio),document.getElementById("webgl-container")?.appendChild(this.renderer.domElement),this.initPiP()}handleVisibilityChange(){document.hidden&&!document.pictureInPictureElement&&this.isPlaying&&this.togglePlayback()}formatTime(e){return`${Math.floor(e/60)}:${Math.floor(e%60).toString().padStart(2,"0")}`}updateUI(){if(!this.midiData)return;const e=this.elapsedTime/this.midiData.duration;this.progressElement.style.width=100*e+"%";const t=`${this.formatTime(this.elapsedTime)} / ${this.formatTime(this.midiData.duration)}`;this.lastFormattedTime!==t&&(this.timeDisplay.textContent=t,this.lastFormattedTime=t);const i=this.notesToPlay.length,n=this.notesToPlay.filter(e=>e.note.time+e.note.duration<this.elapsedTime).length,s=i>0?(n/i*100).toFixed(0):0;this.statsDisplay.textContent=`Notes: ${n} / ${i} (${s}%)`}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}updatePlayback(){if(!this.isPlaying||!this.midiData)return;if(this.elapsedTime=this.synth.currentTime-this.audioContextStartTime,this.elapsedTime>=this.midiData.duration)return this.elapsedTime=this.midiData.duration,void this.resetPlayback();for(;this.nextNoteIndex<this.notesToPlay.length&&this.notesToPlay[this.nextNoteIndex].note.time<=this.elapsedTime;){const e=this.notesToPlay[this.nextNoteIndex],{note:t,channel:i}=e,n=this.matchNoteDurationToggle.checked;this.synth.playNote(t,i,n);const a=new s.Q1f(r[i%r.length]);a.addScalar(o),this.piano.pressKey(t.midi,a),this.activeNotes.set(`${t.midi}-${t.time}-${i}`,e),this.nextNoteIndex++}const e=[];if(this.activeNotes.forEach((t,i)=>{t.note.time+t.note.duration<=this.elapsedTime&&e.push(i)}),e.length>0){const t=new Set;e.forEach(e=>{const i=this.activeNotes.get(e);if(i){const{note:n}=i;t.add(n.midi),this.matchNoteDurationToggle.checked||this.synth.stopNote(n.midi),this.activeNotes.delete(e)}}),t.forEach(e=>{const t=Array.from(this.activeNotes.values()).filter(t=>t.note.midi===e);if(t.length>0){t.sort((e,t)=>t.note.time-e.note.time);const e=t[0],i=new s.Q1f(r[e.channel%r.length]);i.addScalar(o),this.piano.pressKey(e.note.midi,i)}else this.piano.releaseKey(e)})}this.noteVisualizer.noteObjects.position.z=5*this.elapsedTime,this.updateUI()}updateFPS(e){this.frameCount++,e>=this.lastFPSTime+1e3&&(this.fpsDisplay.textContent=`FPS: ${this.frameCount}`,this.frameCount=0,this.lastFPSTime=e)}animate(e){requestAnimationFrame(this.animate.bind(this)),this.updateFPS(e),this.updatePlayback(),this.noteVisualizer.update(this.elapsedTime,this.activeNotes),this.renderer.render(this.scene,this.camera)}}}},i={};function n(e){var s=i[e];if(void 0!==s)return s.exports;var a=i[e]={exports:{}};return t[e].call(a.exports,a,a.exports,n),a.exports}n.m=t,e=[],n.O=(t,i,s,a)=>{if(!i){var o=1/0;for(c=0;c<e.length;c++){for(var[i,s,a]=e[c],r=!0,l=0;l<i.length;l++)(!1&a||o>=a)&&Object.keys(n.O).every(e=>n.O[e](i[l]))?i.splice(l--,1):(r=!1,a<o&&(o=a));if(r){e.splice(c--,1);var h=s();void 0!==h&&(t=h)}}return t}a=a||0;for(var c=e.length;c>0&&e[c-1][2]>a;c--)e[c]=e[c-1];e[c]=[i,s,a]},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={792:0};n.O.j=t=>0===e[t];var t=(t,i)=>{var s,a,[o,r,l]=i,h=0;if(o.some(t=>0!==e[t])){for(s in r)n.o(r,s)&&(n.m[s]=r[s]);if(l)var c=l(n)}for(t&&t(i);h<o.length;h++)a=o[h],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return n.O(c)},i=self.webpackChunkmidi_visualizer=self.webpackChunkmidi_visualizer||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})();var s=n.O(void 0,[96],()=>n(288));s=n.O(s)})();